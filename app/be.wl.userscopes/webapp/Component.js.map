{"version":3,"sources":["../src/Component.ts"],"names":["models","support","LayoutType","ErrorHandler","Component","UIComponent","metadata","manifest","init","errorHandler","setModel","createDeviceModel","JSONModel","getRouter","attachBeforeRouteMatched","event","onBeforeRouteMatched","initialize","destroy","detachBeforeRouteMatched","getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch","oEvent","model","getModel","layout","getParameters","arguments","helper","getHelper","nextUIState","getNextUIState","setProperty","fcl","getFcl","settings","defaultTwoColumnLayoutType","TwoColumnsMidExpanded","defaultThreeColumnLayoutType","ThreeColumnsMidExpanded","FlexibleColumnLayoutSemanticHelper","getInstanceFor","Promise","resolve","reject","FCL","getRootControl","byId","attachAfterInit","getSource"],"mappings":"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","sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport models from \"./model/models\";\nimport { support } from \"sap/ui/Device\";\nimport FlexibleColumnLayoutSemanticHelper from \"sap/f/FlexibleColumnLayoutSemanticHelper\";\nimport { LayoutType } from \"sap/f/library\";\nimport FlexibleColumnLayout from \"sap/f/FlexibleColumnLayout\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport UI5Event from \"sap/ui/base/Event\";\nimport View from \"sap/ui/core/mvc/View\";\nimport ErrorHandler from \"./controller/ErrorHandler\";\n\ntype routeParameters = {\n\targuments: {\n\t\tlayout: string;\n\t}\n};\ntype startupParameters = {\n\tappType:string[]\n}\ntype componentData = {\n\tstartupParameters: startupParameters\n};\ntype routeInfo = {\n\tname:string;\n};\nexport type UIState = {\n\t\"layout\": string;\n\t\"maxColumnsCount\": number;\n\t\"columnsSizes\": {\n\t\t\"beginColumn\": number;\n\t\t\"midColumn\": number;\n\t\t\"endColumn\": number;\n\t},\n\t\"columnsVisibility\": {\n\t\t\"beginColumn\": boolean;\n\t\t\"midColumn\": boolean;\n\t\t\"endColumn\": boolean;\n\t},\n\t\"isFullScreen\": boolean;\n\t\"isLogicallyFullScreen\": boolean;\n\t\"actionButtonsInfo\": {\n\t\t\"midColumn\": {\n\t\t\t\"fullScreen\": string;\n\t\t\t\"exitFullScreen\": string;\n\t\t\t\"closeColumn\": string;\n\t\t},\n\t\t\"endColumn\": {\n\t\t\t\"fullScreen\": string;\n\t\t\t\"exitFullScreen\": string;\n\t\t\t\"closeColumn\": string;\n\t\t}\n\t}\n}\n\n/**\n * @namespace be.wl.userscopes\n */\nexport default class Component extends UIComponent {\n\tprivate contentDensityClass: string | undefined;\n\tprivate errorHandler: ErrorHandler;\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\"\n\t};\n\n\tpublic init(): void {\n\t\tthis.errorHandler = new ErrorHandler(this);\n\t\tsuper.init();\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\tthis.setModel(new JSONModel(), \"appView\");\n\t\tthis.getRouter().attachBeforeRouteMatched((event: UI5Event) => this.onBeforeRouteMatched(event), this)\n\t\tthis.getRouter().initialize();\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.getRouter().detachBeforeRouteMatched((event: UI5Event) => this.onBeforeRouteMatched(event), this);\n\t\tsuper.destroy();\n\t}\n\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t// eslint-disable-next-line\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n\n\tprivate async onBeforeRouteMatched(oEvent: UI5Event) {\n\t\tconst model = (this.getModel(\"appView\") as JSONModel),\n\t\t\tlayout = (oEvent.getParameters() as routeParameters).arguments.layout;\n\n\t\t// If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\n\t\tif (!layout) {\n\t\t\tconst helper = await this.getHelper() ;\n\t\t\tconst nextUIState = (helper.getNextUIState(0) as UIState);\n\t\t\tmodel.setProperty(\"/layout\", nextUIState.layout);\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.setProperty(\"/layout\", layout);\n\t}\n\n\tpublic async getHelper(): Promise<FlexibleColumnLayoutSemanticHelper> {\n\t\tconst fcl = await this.getFcl(),\n\t\t\tsettings = {\n\t\t\t\tdefaultTwoColumnLayoutType: LayoutType.TwoColumnsMidExpanded,\n\t\t\t\tdefaultThreeColumnLayoutType: LayoutType.ThreeColumnsMidExpanded\n\t\t\t};\n\t\treturn (FlexibleColumnLayoutSemanticHelper.getInstanceFor(fcl, settings));\n\t}\n\n\tprivate getFcl(): Promise<FlexibleColumnLayout> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst FCL = ((this.getRootControl() as View).byId('fcl') as FlexibleColumnLayout);\n\t\t\tif (!FCL) {\n\t\t\t\t(this.getRootControl() as View).attachAfterInit((oEvent: UI5Event) => {\n\t\t\t\t\tresolve(((oEvent.getSource() as View).byId('fcl') as FlexibleColumnLayout));\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(FCL);\n\t\t});\n\t}\n}"],"file":"Component.js"}