## Generated mta.yaml based on template version 0.4.0
## appName = mt-beershop
## language=nodejs; multitenant=true
## approuter=
_schema-version: '3.1'
ID: mt-beershop
version: 1.0.1
description: "CAP Multitenancy Beershop"
parameters:
  enable-parallel-deployments: true
  appname: mt-beershop
  subdomain: csw-dev-azure
   
build-parameters:
  before-all:
   - builder: custom
     commands:
      - npm ci
      - npx -p @sap/cds-dk cds build --production

modules:
  - name: mt-beershop-ui
    type: html5
    path: approuter
    build-parameters:
      ignore: ["node_modules/"]
    parameters:
#      routes:
#        - route: https://${subdomain}-${app-name}.${default-domain}
#        - route: https://dev-azure-sub1-${app-name}.${default-domain}
      memory: 256M
      disk-quota: 512M
      keep-existing-routes: true
    properties:
      TENANT_HOST_PATTERN: '^(.*)-${app-name}.${default-domain}'
      SEND_XFRAMEOPTIONS: false
      CJ_PROTECT_WHITELIST: >
        [
          {
            "protocol": "https",
            "host": "*.ondemand.com"
          }
        ]
    requires:
    - name: mt-beershop-html5-rt
    - name: mt-beershop-uaa-mt
    # The bindings destination and connectivity results in the issue:
    # Error getting client_credentials token for html5-apps-repo-rt from subaccount gregor-subscriber-01 
    #- name: mt-beershop-destination
    # Required for on-premise connectivity only
    #- name: mt-beershop-connectivity
    - name: srv_api
      group: destinations
      properties:
        name: srv
        url: ~{url}
        forwardAuthToken: true
  - name: mt-beershop-html5-deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mt-beershop-html5-host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - name: mt-beershop-static
          artifacts:
            - static.zip
          target-path: resources/
        - name: mt-beershop-beers
          artifacts:
            - beers.zip
          target-path: resources/
        - name: mt-beershop-user-scopes
          artifacts:
            - user-scopes.zip
          target-path: resources/
        - name: mt-beershop-userscopes-fcl
          artifacts:
            - user-scopes-fcl.zip
          target-path: resources/
  - name: mt-beershop-static
    type: html5
    path: app/static
    build-parameters:
      builder: custom
      commands:
        - npm run build
      supported-platforms: []
  - name: mt-beershop-beers
    type: html5
    path: app/beers
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []      
  - name: mt-beershop-user-scopes
    type: html5
    path: app/user-scopes
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
  - name: mt-beershop-userscopes-fcl
    type: html5
    path: app/be.wl.userscopes
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
  # --------------------- SERVER MODULE ------------------------
  - name: mt-beershop-srv
  # ------------------------------------------------------------
    type: nodejs
    path: gen/srv
    parameters:
      memory: 256M
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm-ci
      ignore: ["node_modules/"]
    requires:
    # Resources extracted from CAP configuration
    - name: mt-beershop-db-mt
    - name: mt-beershop-uaa-mt
    - name: mt-beershop-registry
    - name: mt-beershop-destination
    # Required for on-premise connectivity only
    - name: mt-beershop-connectivity
    provides:
    - name: srv_api      # required by consumers of CAP services (e.g. approuter)
      properties:
        url: ${default-url}
    - name: mtx-api      # potentially required by approuter
      properties:
        mtx-url: ${default-url}

resources:
  - name: mt-beershop-html5-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
  - name: mt-beershop-html5-rt
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
# services extracted from CAP configuration
# 'service-plan' can be configured via 'cds.requires.<name>.vcap.plan'
# ------------------------------------------------------------
  - name: mt-beershop-db-mt
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
    properties:
      hdi-service-name: ${service-name}
  # ------------------------------------------------------------
  - name: mt-beershop-uaa-mt
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: broker  
      path: ./xs-security.json
      config:
        xsappname: mt-beershop-${space}    #  name + space dependency
        tenant-mode: shared

  - name: mt-beershop-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite

  # Required for on-premise connectivity only
  - name: mt-beershop-connectivity
    type: org.cloudfoundry.managed-service
    parameters:
      service: connectivity
      service-plan: lite

  - name: mt-beershop-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: mt-beershop-uaa-mt
      - name: mtx-api
        properties:
            prop: ~{mtx-url}
        parameters:
            param: ~{mtx-url}
    parameters:
      service: saas-registry
      service-plan: application
      config:
          xsappname: ${appname}-${space}
          appName: ${appname}
          displayName: mt-beershop
          description: CAP Multitenancy Beershop
          category: Custom Apps
          appUrls:
            onSubscription: ~{mtx-api/mtx-url}/mtx/v1/provisioning/tenant/{tenantId}
            getDependencies: ~{mtx-api/mtx-url}/mtx/v1/provisioning/dependencies
            onSubscriptionAsync: false
            onUnSubscriptionAsync: false
